{"version":3,"sources":["Compoenents/HeaderComponent.js","Compoenents/LightComponent.js","App.js","serviceWorker.js","Compoenents/FooterCoponent.js","index.js"],"names":["Header","className","Navbar","collapseOnSelect","expand","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","Component","Light","props","context","this","state","src","App","getRequest","path","a","fetch","response","json","then","res","console","log","body","express","setState","data","bind","Button","onClick","Boolean","window","location","hostname","match","Footer","to","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.65a313fc.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Navbar,Nav,NavDropdown}from 'react-bootstrap'\n\nclass Header extends Component{\n\n\n    render() {\n        return(\n\n            <div className='footer'>\n                <Navbar collapseOnSelect expand=\"lg\"  className='footer'  variant=\"dark\">\n                    <Navbar.Brand href=\"#home\">Delarea Light App</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                            <Nav.Link href=\"#Info\">Info</Nav.Link>\n                            <Nav.Link href=\"#About\">About</Nav.Link>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n            </div>\n        );\n    }\n\n\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport {Card, CardImg} from \"react-bootstrap\";\n\n\n\nclass Light extends Component{\n    constructor(props, context) {\n        super(props, context);\n\n    }\n    render(){\n        if (this.props.state ===\"on\") {\n            return (\n                <div className='container justify-content-center'>\n                    <h1 className='lightStatusText'> Hey!, the light is </h1>\n                    <div className='row justify-content-center'>\n                        <img src='/assets/images/on.png' className='stateImage '/>\n                    </div>\n                </div>\n            );\n        } else if(this.props.state ===\"off\") {\n            return (\n                <div className='container justify-content-center'>\n                    <h1 className='lightStatusText'> Hey!, the light is </h1>\n                    <div className='row justify-content-center'>\n                        <img src='/assets/images/off.png' className='stateImage '/>\n                    </div>\n                </div>\n            );\n        }else{\n            return(\n                <div className='container justify-content-center'>\n                    <h1 className='lightStatusText'> Error! call eyal or shaked </h1>\n                    <h2 className='lightStatusText'>{this.props.state}</h2>\n                    <div className='row justify-content-center'>\n                        <img src='/assets/images/error.png' className='stateImage '/>\n                    </div>\n                </div>\n            );\n\n        }\n    }\n}\n\nexport default Light;","import React, {Component} from 'react';\nimport './App.css';\nimport './Compoenents/HeaderComponent';\nimport {Button} from \"react-bootstrap\";\nimport Light from \"./Compoenents/LightComponent\";\nimport Switch from '@material-ui/core/Switch';\n\nconst server_path = \"http://10.100.102.44:5000\"\nconst dummy_server_path = \"http://localhost:5000\";\n\nclass App extends Component {\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            data: \"press get state\",\n            state: \"null\",\n        }\n        this.getRequest = this.getRequest.bind(this);\n        this.getRequest('/get_state');\n    }\n\n    /**\n     * Manage get requests to the server\n     * Available posts requests:\n     * /off\n     * /on\n     * /get_state\n     *\n     * @param path\n     * @returns {Promise<void>}\n     */\n    getRequest = async (path) => {\n        const response = await fetch(server_path + path);\n        const body = await response.json()\n            .then(res => res)\n            .then(console.log())\n        console.log(path + \" was pressed\")\n\n        //only for the get_state response we need\n        //to parse the answer\n        if(path ===\"/get_state\"){\n            if((body.express)==1){\n                this.setState({state:\"off\"})\n            }else if(body.express==0){\n                this.setState({state:\"on\"})\n            }\n        }else{\n            this.setState({state: body.express})\n        }\n    }\n\n\n\n    render() {\n        return (\n            <div className=\"container main\">\n                <div>\n                    <Light state={this.state.state}/>\n                </div>\n                <div className='row'>\n                    <div className='col-6'>\n                        <Button className='controlButton' variant=\"success\"\n                                onClick={() => this.getRequest('/on')}>On</Button>\n                    </div>\n                    <div className='col-6'>\n                        <Button className='controlButton' variant=\"danger\"\n                                onClick={() => this.getRequest('/off')}>Off</Button>\n                    </div>\n                </div>\n                <div className='row'>\n\n                </div>\n\n\n\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { NavLink} from \"react-router-dom\";\nimport {Nav,NavItem} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\n\n\nfunction Footer(props) {\n    return (\n        <div className=\"footer\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-4 offset-1 col-sm-2\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><Link to='/home'>Home</Link></li>\n                            <li><Link to='/aboutus'>About Us</Link></li>\n                            <li><Link to='/contactus'>Contact Us</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-7 col-sm-5\">\n                        <h5>Our Address</h5>\n                        <address className='address'>\n                            לאה גולדברג 10<br />\n                            מדרדשת בן גוריון<br />\n                            <i className=\"fa fa-phone fa-lg\"></i>: 08-653-2183<br />\n                            <i className=\"fa fa-envelope fa-lg\"></i> <a href=\"mailto:RoseyStella@food.net\">\n                            RoseyStella@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-4 align-self-center\">\n                        <div className=\"text-center\">\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-auto\">\n                        <p>© Copyright 2020 Rosey Stella</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n}\n\nexport default Footer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport { render } from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport Header from \"./Compoenents/HeaderComponent\";\nimport Footer from \"./Compoenents/FooterCoponent\";\n\n\nrender((\n    <BrowserRouter>\n        <Header/>\n        <App/>\n        <Footer/>\n    </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}